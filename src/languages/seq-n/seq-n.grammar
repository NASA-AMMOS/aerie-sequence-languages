@top Sequence {
  newLine?
  (
    commentLine* ~maybeComments
    (IdDeclaration | ParameterDeclaration | LocalDeclaration | GenericDirective)
  )*
  commentLine* ~maybeComments
  Metadata?
  Commands?
  ImmediateCommands?
  HardwareCommands?
}

// Potential Improvements
// maintainability - use @specialize on directives

@precedence {
  stemStart @cut
}

GenericDirective {
  genericDirective String* newLine
}

IdDeclaration {
  idDirective (String | Enum | Number)? newLine
}

ParameterDeclaration {
  (parameterDirective Variable{ Enum Object? }+ newLine) |
  (parameterStartDirective newLine (Variable newLine)* parameterEndDirective newLine )
}

LocalDeclaration {
  (localsDirective Variable{ Enum Object? }+ newLine) |
  (localsStartDirective newLine (Variable newLine)* localsEndDirective newLine )
}

Variable {
  Enum (Type { identifier } (
    (EnumName { identifier } (Range { String } (Values {String})?)? )?
    | (Range { String } (Values {String})? )
  ))?
}

commandBlock {
  (
    step |
    Request |
    commentLine ~maybeComments
  )+
}

step { Command | Activate | GroundBlock | GroundEvent | Load }

commentLine {
  LineComment newLine
}

Commands {
  (LoadAndGoDirective newLine)?
  commandBlock
}

ImmediateCommands {
  immediateDirective newLine
  commandBlock
}

HardwareCommands {
  hardwareDirective newLine
  commandBlock
}

TimeTag { TimeAbsolute | (TimeGroundEpoch Name { String })  | TimeEpoch | TimeRelative  | TimeComplete }

Args { arg* }

RepeatArg { "[" (arg)* "]" }

arg[@isGroup=Arguments] { Number | String | Boolean | Enum | RepeatArg }

Command {
  TimeTag?
  Stem
  Args
  LineComment?
  newLine
  Metadata?
  Models?
}

Activate { TimeTag? activateDirective commonLoadActivate }

Load { TimeTag? loadDirective commonLoadActivate }

commonLoadActivate {
  "(" SequenceName { String } ")"
  Args
  LineComment?
  newLine
  Engine { engineDirective Number newLine }?
  Epoch { epochDirective String newLine }?
  Metadata?
  Models?
}

GroundBlock { TimeTag groundBlockDirective commonGround }

GroundEvent { TimeTag groundEventDirective commonGround }

commonGround {
  "(" GroundName { String } ")"
  Args
  LineComment?
  newLine
  Metadata?
  Models?
}

Request {
  TimeTag
  requestStartDirective "(" RequestName { String } ")"
  LineComment? newLine
  // json schema requires step+, catch error in linter for cleaner message
  Steps { step* }
  requestEndDirective newLine
  Metadata?
}

Metadata {
  MetaEntry {
    metadataDirective
    Key { String }
    Value { metaValue }
    newLine
  }+
}

metaValue {
  String | Number | Boolean | Null | Array | Object
}

Object { "{" (newLine? | list<Property>) "}" }
Array  { "[" (newLine? | list<metaValue>) "]" }

Property { PropertyName newLine? ":" newLine? metaValue }
PropertyName[isolate] { String }

list<item> { newLine? item (newLine? "," newLine? item)* newLine? }

Models {
  Model {
    modelDirective
    Variable { String }
    Value { String | Number | Boolean }
    Offset { String }
    newLine
  }+
}

Enum { identifier }

Stem { !stemStart identifier }

@tokens {
  identifier { @asciiLetter (@asciiLetter| @digit | "_" | "-")* }

  timeHhmmss { @digit@digit":"@digit@digit":"@digit@digit("."@digit+)? }

  timeDOY { @digit@digit@digit"T"timeHhmmss }

  timeSecond { $[1-9] @digit* ("."@digit+)? }

  TimeAbsolute { 'A'@digit@digit@digit@digit"-"@digit@digit@digit"T"timeHhmmss }

  TimeRelative { 'R'(timeSecond | timeDOY | timeHhmmss) }

  TimeEpoch { 'E'$[+\-]?(timeSecond | timeDOY | timeHhmmss) }

  TimeGroundEpoch { 'G'$[+\-]?(timeSecond | timeDOY | timeHhmmss) }

  TimeComplete { 'C ' }

  String { '"' (!["\\] | "\\" _)* '"' }

  hex { @digit | $[A-F] }

  Number {
    ("+" | "-")? (@digit ("_" | @digit)* ("." ("_" | @digit)*)? | "." @digit ("_" | @digit)*)
    (("e" | "E") ("+" | "-")? ("_" | @digit)+)? |
    @digit ("_" | @digit)* "n" |
    "0x" (hex | "_")+ "n"?
  }

  TRUE { 'true' }
  FALSE { 'false' }
  Boolean { TRUE | FALSE }
  Null { "null" }

  LineComment { "#"![\n\r]* }

  newLine { @whitespace* ("\n" | @eof) }

  whiteSpace { $[ \t]+ }

  idDirective { "@ID" }
  LoadAndGoDirective { "@LOAD_AND_GO"}
  immediateDirective { "@IMMEDIATE" }
  hardwareDirective { "@HARDWARE" }
  localsDirective { "@LOCALS" }
  localsStartDirective { "@LOCALS_BEGIN" }
  localsEndDirective { "@LOCALS_END" }
  parameterDirective { "@INPUT_PARAMS" }
  parameterStartDirective { "@INPUT_PARAMS_BEGIN" }
  parameterEndDirective { "@INPUT_PARAMS_END" }
  activateDirective { "@ACTIVATE" }
  loadDirective { "@LOAD" }
  engineDirective { "@ENGINE" }
  epochDirective { "@EPOCH" }
  groundBlockDirective { "@GROUND_BLOCK" }
  groundEventDirective { "@GROUND_EVENT" }
  requestStartDirective { "@REQUEST_BEGIN" }
  requestEndDirective { "@REQUEST_END" }
  metadataDirective { "@METADATA" }
  modelDirective { "@MODEL" }
  genericDirective { "@"identifier }

  @precedence { newLine, whiteSpace }

  @precedence{ TimeAbsolute, TimeRelative, TimeEpoch, TimeComplete, TimeGroundEpoch, Boolean, identifier }

  @precedence {
    LoadAndGoDirective,
    idDirective,
    metadataDirective,
    modelDirective,
    immediateDirective,
    hardwareDirective,
    localsStartDirective
    localsEndDirective
    localsDirective,
    parameterStartDirective,
    parameterEndDirective,
    parameterDirective,
    activateDirective,
    loadDirective,
    groundBlockDirective,
    groundEventDirective,
    requestStartDirective,
    requestEndDirective,
    engineDirective,
    epochDirective,
    genericDirective,
    identifier
  }
}

@skip { whiteSpace }
